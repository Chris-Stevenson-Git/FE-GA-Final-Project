{"version":3,"sources":["components/Login.js","components/AddMember.js","components/AddChore.js","components/Home.js","components/FrontPage.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","Login","state","form","first_name","last_name","email","password","password_confirm","handleInput","ev","target","name","setState","value","executeSignup","fetch","headers","method","body","JSON","stringify","user","then","data","executeLogin","catch","err","console","warn","log","request","resp","json","localStorage","setItem","jwt","props","setCurrentUser","history","push","handleSubmit","preventDefault","setForm","getAttribute","onSubmit","this","className","onClick","onChange","type","placeholder","React","Component","AddMember","error","token","getItem","household","householdID","res","result","message","refresh","hide","householdName","AddChore","location","est_time","frequency","users","map","id","Home","myHouseholds","currentHousehold","dashboard","chores","current_user_id","undefined","owner","addMember","addChore","scheduledForDeleting","scheduledForCompleting","setDashboard","h","find","response","userID","inputs","document","getElementsByTagName","i","length","checked","setCurrentHousehold","toggleAddMember","toggleAddChore","addToDeleteSchedule","currentSchedule","includes","index","indexOf","splice","delChores","addToCompletedSchedule","completeChores","cssTag","u","charAt","chore","parseInt","user_id","completed_css","completed","htmlFor","FrontPage","App","current_user_name","handleLogout","removeItem","to","exact","path","render","component","Boolean","window","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85513bd1.chunk.js","sourcesContent":["import React from 'react'\n\n// const BASE_URL = 'https://ga-final-proj-backend.herokuapp.com'\nconst BASE_URL = 'http://localhost:3000'\n\n\nclass Login extends React.Component{\n  state = {\n    form: 'login',\n    first_name: '',\n    last_name: '',\n    email: '',\n    password: '',\n    password_confirm: ''\n  }\n\n  //handle typing in the form\n  handleInput = (ev) => {\n    switch(ev.target.name){\n      case 'first_name':\n        this.setState({first_name: ev.target.value})\n        break;\n      case 'last_name':\n        this.setState({last_name: ev.target.value})\n        break;\n      case 'email':\n        this.setState({email: ev.target.value})\n        break;\n      case 'password':\n        this.setState({password: ev.target.value})\n        break;\n      case 'password_confirm':\n        this.setState({password_confirm: ev.target.value})\n    }\n  } //handleInput\n\n  //function to sign up and create an account\n  executeSignup = () => {\n    if(this.state.password !== this.state.password_confirm){\n      console.log('Passwords must match');\n      return;\n    }\n\n    fetch(`${BASE_URL}/create_user`, {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          first_name: this.state.first_name,\n          last_name: this.state.last_name,\n          email: this.state.email,\n          password: this.state.password\n        }\n      })\n    })\n    .then(data => {\n      this.executeLogin();\n    })\n    .catch(err => console.warn(err))\n  }\n\n  executeLogin = () => {\n    const request = {'email': this.state.email, 'password': this.state.password}\n    fetch(`${BASE_URL}/user_token`, {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n      method: 'POST',\n      body: JSON.stringify({'auth': request})\n    })\n    .then(resp => resp.json())\n    .then(data => {\n      localStorage.setItem(\"cwLoginToken\", data.jwt)\n      this.props.setCurrentUser();\n      this.props.history.push('/')\n    })\n    .catch(err => console.warn(err))\n  }\n\n  //handle the submit of the login\n  handleSubmit = (ev) => {\n    const form = this.state.form\n    if(form === 'login'){\n      this.executeLogin();\n    } else {\n      this.executeSignup();\n    }\n    ev.preventDefault();\n  }\n\n  setForm = (ev) => {\n    this.setState({form: ev.target.getAttribute('name')})\n  }\n\n  render(){\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <div className='loginButton' onClick={this.setForm} name='login'>Login</div>\n        |\n        <div className='loginButton' onClick={this.setForm} name='signup'>Sign Up</div>\n        <br/>\n        {\n          this.state.form === 'signup'\n          &&\n          <div>\n            <input\n              onChange={this.handleInput}\n              name=\"first_name\"\n              type=\"text\"\n              placeholder='Enter First Name'\n              />\n            <br/>\n            <input\n              onChange={this.handleInput}\n              name=\"last_name\"\n              type=\"text\"\n              placeholder='Enter Last Name'\n              />\n          </div>\n        }\n        <input\n          onChange={this.handleInput}\n          name=\"email\"\n          type=\"email\"\n          placeholder='Enter Email'\n        />\n        <br/>\n        <input\n          onChange={this.handleInput}\n          name=\"password\"\n          type=\"password\"\n          placeholder='Enter Password'\n        />\n        <br/>\n        {\n          this.state.form === 'signup'\n          ?\n          <div>\n            <input\n              onChange={this.handleInput}\n              name=\"password_confirm\"\n              type=\"password\"\n              placeholder='Confirm Password'\n            />\n          <br/>\n          <button>Sign Up</button>\n          </div>\n          :\n          <button>Login</button>\n        }\n      </form>\n    ); // return\n  }// render\n} // class Login\n\nexport default Login\n","import React from 'react'\n\n// const BASE_URL = 'https://ga-final-proj-backend.herokuapp.com'\nconst BASE_URL = 'http://localhost:3000'\n\n\nclass AddMember extends React.Component{\n\n  state = {\n    email: '',\n    error: ''\n  }\n\n  handleInput = (ev) => {\n    this.setState({email: ev.target.value})\n  }\n\n  handleSubmit = (ev) => {\n    let token = `Bearer ${localStorage.getItem('cwLoginToken')}`\n    fetch(`${BASE_URL}/add_member_to_household`, {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\",\n                'Authorization': token},\n      method: 'POST',\n      body: JSON.stringify({\n        email: this.state.email,\n        household: this.props.householdID\n      })\n    })\n    .then(res => res.json())\n    .then(data => {\n      if(data.result === 'ERROR'){\n        this.setState({error: data.message})\n      } else {\n\n        this.props.refresh();\n        this.props.hide();\n      }\n    })\n    .catch(err => console.warn(err))\n\n    ev.preventDefault();\n  }\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h2>Add Member to {this.props.householdName}</h2>\n          {\n            this.state.error !== '' && <p>{this.state.error}</p>\n          }\n            <input\n              onChange={this.handleInput}\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Member's Email\"\n            />\n          <button>Add</button>\n        </form>\n        <button onClick={this.props.hide}>Close</button>\n      </div>\n    );\n  }//render\n}//Add Member class\n\nexport default AddMember\n","import React from 'react'\n\n// const BASE_URL = 'https://ga-final-proj-backend.herokuapp.com'\nconst BASE_URL = 'http://localhost:3000'\n\n\nclass AddChore extends React.Component{\n\n  state = {\n    name: '',\n    location: '',\n    est_time: '',\n    user: '',\n    frequency: '',\n    error: ''\n  }\n\n  handleInput = (ev) => {\n    switch(ev.target.name){\n      case 'name':\n        this.setState({name: ev.target.value})\n        break;\n      case 'location':\n        this.setState({location: ev.target.value})\n        break;\n      case 'est_time':\n        this.setState({est_time: ev.target.value})\n        break;\n      case 'user':\n        this.setState({user: ev.target.value})\n        break;\n      case 'frequency':\n        this.setState({frequency: ev.target.value})\n    }\n  }\n\n  handleSubmit = (ev) => {\n    let token = `Bearer ${localStorage.getItem('cwLoginToken')}`\n    fetch(`${BASE_URL}/add_chore_to_household`, {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\",\n                'Authorization': token},\n      method: 'POST',\n      body: JSON.stringify({\n        name: this.state.name,\n        location: this.state.location,\n        est_time: this.state.est_time,\n        user: this.state.user,\n        frequency: this.state.frequency,\n        household: this.props.householdID\n      })\n    })\n    .then(res => res.json())\n    .then(data => {\n      if(data.result === 'ERROR'){\n        this.setState({error: data.message})\n      } else {\n        this.props.refresh();\n        this.props.hide();\n      }\n    })\n    .catch(err => console.warn(err))\n\n    ev.preventDefault();\n  }\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h2>Add Chore to {this.props.householdName}</h2>\n          {\n            this.state.error !== '' && <p>{this.state.error}</p>\n          }\n            <input\n              onChange={this.handleInput}\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Chore name..\"\n            />\n            <br/>\n            <input\n              onChange={this.handleInput}\n              name=\"location\"\n              type=\"text\"\n              placeholder=\"Location..\"\n            />\n          <br/>\n            <input\n              onChange={this.handleInput}\n              name=\"est_time\"\n              type=\"number\"\n              placeholder=\"Est. duration (mins)\"\n            />\n          <br/>\n            <select\n              onChange={this.handleInput}\n              name='user'\n              >\n              <option>Auto Assign</option>\n              {\n                this.props.users.map(user => {\n                  return <option value={user.id}>{user.first_name}</option>\n                })\n              }\n            </select>\n            <br/>\n            <input\n              onChange={this.handleInput}\n              name=\"frequency\"\n              type=\"number\"\n              placeholder=\"Days before it has to be repeated\"\n            />\n          <br/>\n          <button>Add</button>\n        </form>\n        <button onClick={this.props.hide}>Close</button>\n      </div>\n    );\n  }//render\n}//Add Chore class\n\nexport default AddChore\n","import React from 'react'\n\nimport AddMember from './AddMember'\nimport AddChore from './AddChore'\n\n// const BASE_URL = 'https://ga-final-proj-backend.herokuapp.com'\nconst BASE_URL = 'http://localhost:3000'\n\n\nclass Home extends React.Component{\n\n  state = {\n    myHouseholds: [],\n    currentHousehold: '',\n    dashboard: {\n      users: [],\n      chores: []\n    },\n    current_user_id: undefined,\n    owner: false,\n    addMember: false,\n    addChore: false,\n    scheduledForDeleting: [],\n    scheduledForCompleting: []\n  }\n\n  componentDidMount(){\n    //Get a list of the current households this user belongs to.\n    let token = `Bearer ${localStorage.getItem('cwLoginToken')}`\n    fetch(`${BASE_URL}/my_households`, {\n      headers: {'Authorization': token}\n    })\n    .then(response => response.json())\n    .then(data => {\n      this.setState({myHouseholds: data, currentHousehold: data[0].name})\n      this.setDashboard();\n    })\n    .catch(err => console.warn(err))\n  }\n\n  //function to set the data of the dashboard\n  setDashboard = () => {\n    const h = this.state.myHouseholds.find(household => household.name === this.state.currentHousehold);\n\n    //Get details from the current household\n    let token = `Bearer ${localStorage.getItem('cwLoginToken')}`\n    fetch(`${BASE_URL}/household/${h.id}`, {\n      headers: {'Authorization': token}\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      this.setState({dashboard: data})\n      if(data.owner === this.props.userID){\n        this.setState({owner: true})\n      } else {\n        this.setState({owner: false})\n      }\n    })\n    .catch(err => console.warn(err))\n\n    //Deselect all checkboxes in the DOM\n    const inputs = document.getElementsByTagName('input')\n    for(let i = 0; i < inputs.length; i++ ){\n      if(inputs[i].type === 'checkbox'){\n        inputs[i].checked = false;\n      }\n    }\n\n  }//setDashboard\n\n  //function to set the current household in state\n  setCurrentHousehold = (ev) => {\n    this.setState({currentHousehold: ev.target.value})\n  }\n\n  toggleAddMember = () => {\n    if(this.state.addMember === false){\n      this.setState({addMember: true})\n    } else {\n      this.setState({addMember: false})\n    }\n  }\n\n  toggleAddChore = () => {\n    if(this.state.addChore === false){\n      this.setState({addChore: true})\n    } else {\n      this.setState({addChore: false})\n    }\n  }\n\n  //Function to add ticked chores to a list of chores that will be deleted\n  addToDeleteSchedule = (ev) => {\n    let currentSchedule = this.state.scheduledForDeleting\n    if(currentSchedule.includes(ev.target.value)){\n      const index = currentSchedule.indexOf(ev.target.value)\n      currentSchedule.splice(index, 1)\n    } else {\n      currentSchedule.push(ev.target.value)\n    }\n    this.setState({scheduledForDeleting: currentSchedule})\n  }\n\n  //Function to delete chores from the DB\n  delChores = () => {\n    let token = `Bearer ${localStorage.getItem('cwLoginToken')}`\n    fetch(`${BASE_URL}/del_chores`, {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\",\n                'Authorization': token},\n      method: 'POST',\n      body: JSON.stringify({\n        chores: this.state.scheduledForDeleting\n      })\n    })\n    .then(res => {\n      this.setState({scheduledForDeleting: []})\n      this.setDashboard()\n    })\n    .catch(err => console.warn(err))\n  }\n\n  //Function to add ticked 'my chores' to state\n  addToCompletedSchedule = (ev) => {\n    let currentSchedule = this.state.scheduledForCompleting\n    if(currentSchedule.includes(ev.target.value)){\n      const index = currentSchedule.indexOf(ev.target.value)\n      currentSchedule.splice(index, 1)\n    } else {\n      currentSchedule.push(ev.target.value)\n    }\n    this.setState({scheduledForCompleting: currentSchedule})\n  }\n\n  completeChores = () => {\n    let token = `Bearer ${localStorage.getItem('cwLoginToken')}`\n    fetch(`${BASE_URL}/complete_chores`, {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\",\n                'Authorization': token},\n      method: 'PATCH',\n      body: JSON.stringify({\n        chores: this.state.scheduledForCompleting\n      })\n    })\n    .then(res => {\n      this.setState({scheduledForCompleting: []})\n      this.setDashboard()\n    })\n    .catch(err => console.warn(err))\n  }\n\n\n  render(){\n    return(\n      <div>\n        {\n          this.state.addMember\n          &&\n          <AddMember\n            hide={this.toggleAddMember}\n            householdName={this.state.currentHousehold}\n            householdID={this.state.dashboard.id}\n            refresh={this.setDashboard}\n          />\n        }\n        {\n          this.state.addChore\n          &&\n          <AddChore\n            hide={this.toggleAddChore}\n            householdName={this.state.currentHousehold}\n            householdID={this.state.dashboard.id}\n            users={this.state.dashboard.users}\n            refresh={this.setDashboard}\n          />\n        }\n        <div className='dashboard'>\n          <h1>Dashboard for </h1>\n          <select onChange={this.setCurrentHousehold}>\n            {\n              this.state.myHouseholds.map(h => {\n                return <option>{h.name}</option>\n              })\n            }\n          </select>\n          <button onClick={this.setDashboard}>Load</button>\n        </div>\n\n        <div className='householdMembers'>\n          <h2>Members: </h2>\n          <ul>\n            {\n              this.state.dashboard.users.map((user, i) => {\n                let cssTag;\n                this.state.dashboard.users.map(u => {\n                  if(u.id === user.id){\n                    cssTag = `member${this.state.dashboard.users.indexOf(u)}`\n                  }\n                })\n                return <li className={cssTag}>{user.first_name} {user.last_name.charAt(0)}.</li>\n              })\n            }\n            {\n              this.state.owner && <li onClick={this.toggleAddMember}>Add Member...</li>\n            }\n          </ul>\n        </div>\n\n        <div className='myChores'>\n          <h2>My Chores</h2>\n          <ul>\n            {\n              this.state.dashboard.chores.map(chore => {\n                if(this.props.userID === parseInt(chore.user_id)){\n                  const i = `myChores${chore.id}`\n                  let completed_css = 'chore incomplete'\n                  if(chore.completed){\n                    completed_css = 'chore completed'\n                  }\n                  return <div className={completed_css}>\n                    {\n                      chore.completed === false &&\n                      <input\n                        type='checkbox'\n                        value={chore.id}\n                        id={i}\n                        onClick={this.addToCompletedSchedule}/>\n                    }\n                    <label htmlFor={i}>{chore.name}</label>\n                    <p>Location: {chore.location} | Est. Time: {chore.est_time} mins</p>\n                  </div>\n                }\n              })\n            }\n          </ul>\n          <button onClick={this.completeChores}>Mark Completed</button>\n        </div>\n\n        <div className='allChores'>\n          <h2>All Chores: </h2>\n          <ul>\n            {\n              this.state.owner && <li className='addChore' onClick={this.toggleAddChore}>Add Chore...</li>\n            }\n            {\n              this.state.dashboard.chores.map(chore => {\n                let cssTag;\n                this.state.dashboard.users.map(u => {\n                  if(u.id === parseInt(chore.user_id)){\n                    cssTag = `member${this.state.dashboard.users.indexOf(u)}`\n                  }\n                })\n                const i = `allChores${chore.id}`\n                return <li className={cssTag}>\n                  <input type='checkbox' value={chore.id} id={i} onClick={this.addToDeleteSchedule}/>\n                  <label htmlFor={i}>{chore.name}</label>\n                </li>\n              })\n            }\n          </ul>\n          {\n            this.state.owner && <button onClick={this.delChores}>Delete</button>\n          }\n        </div>\n      </div>\n    )//return\n  }//render\n} //class Home\n\nexport default Home\n","import React from 'react'\n\nclass FrontPage extends React.Component{\n\n  render(){\n    return(\n      <div className='frontPage'>\n        Chore Wheel App\n      </div>\n    )//return\n  }//render\n} //class FrontPage\n\nexport default FrontPage\n","import React from 'react';\nimport {HashRouter as Router, Route, Link} from 'react-router-dom'\n\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport FrontPage from './components/FrontPage'\n\nimport './css/Home.css'\nimport './css/NavBar.css'\nimport './css/FrontPage.css'\nimport './css/Form.css'\n\n// const BASE_URL = 'https://ga-final-proj-backend.herokuapp.com'\nconst BASE_URL = 'http://localhost:3000'\n\nclass App extends React.Component{\n\n  state = {\n    current_user_name: undefined,\n    current_user_id: undefined\n\n  }\n\n  componentDidMount(){\n    this.setCurrentUser();\n  }\n\n  setCurrentUser = () => {\n    let token = `Bearer ${localStorage.getItem('cwLoginToken')}`\n    fetch(`${BASE_URL}/users/current`, {\n      headers: {'Authorization': token}\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      //this will return null if the request 'successfully fails'\n      if(data != null){\n        this.setState({current_user_name: data.name, current_user_id: data.id })\n      }\n    })\n    .catch(err => console.warn(err))\n  }\n\n  //function to log the user out.\n  handleLogout = () => {\n    this.setState({current_user_name: undefined})\n    localStorage.removeItem(\"cwLoginToken\");\n  }\n\n  render(){\n    return(\n      <Router>\n        <header>\n          <nav>\n            {/* Show one of two nav bars depending on if the user is logged in */}\n            {\n              this.state.current_user_name !== undefined\n              ?\n              (\n                <ul>\n                  <li>Welcome {this.state.current_user_name} | </li>\n                  <li><Link onClick={this.handleLogout} to='/'>Logout</Link></li>\n                </ul>\n              )\n              :\n              (\n                <ul>\n                  <li><Link to='/login'>Login/Signup</Link></li>\n                </ul>\n              )\n            }\n          </nav>\n        </header>\n        {\n          this.state.current_user_name !== undefined\n          ?\n          <Route\n            exact path='/'\n            render={(props) => <Home userID={this.state.current_user_id}{...props}/>}\n            />\n          :\n          <Route exact path='/' component={FrontPage}/>\n        }\n        <Route\n          exact path='/login'\n          render={(props) => <Login setCurrentUser={this.setCurrentUser}{...props}/>}\n          />\n      </Router>\n    )//return\n  }//render\n\n}//class App\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}